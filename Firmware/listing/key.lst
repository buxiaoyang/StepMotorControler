C51 COMPILER V7.50   KEY                                                                   12/29/2015 17:09:29 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\output\key.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE source\key.c LARGE BROWSE INCDIR(.\include\) DEBUG OBJECTEXTEND PRINT(.\lis
                    -ting\key.lst) OBJECT(.\output\key.obj)

line level    source

   1          #include "key.h"
   2          #include <intrins.h>
   3          #include <parameter.h>
   4          #include <key.h>
   5          #include <dispatch.h>
   6          #include <timer.h>
   7          #include <basefunc.h>
   8          
   9          
  10          #define STATE_MACHINE_DELAY
  11          
  12          static unsigned char Key_Scan_Steps = 0;                //0：初始状态 如果有按键按下则进入1
  13                                                                                                          //1：延迟10ms
  14                                                                                                          //2：如果按键确实按下则进入3
  15                                                                                                          //3：确定按键
  16                                                                                                          //4：如果按键释放则进入0
  17          
  18          
  19          static void OnKeyPressed()
  20          {
  21   1              if (keyMotorForward == 0) //电机前进
  22   1              {
  23   2                      ControlMotor(MOTORDIRECTION_FORWARD);
  24   2              }
  25   1              else if (keyMotorBackward == 0) //电机后退
  26   1              {
  27   2                      ControlMotor(MOTORDIRECTION_BACKWARD);  
  28   2              }
  29   1              else if (keyTestMotor == 0)
  30   1              {
  31   2                      TestMotor();
  32   2              }
  33   1              else if (keyInitMotor == 0)
  34   1              {
  35   2                      InitMotor();
  36   2              }
  37   1              else if (keyUserControl == 0)
  38   1              {
  39   2                      UserControl();
  40   2              }
  41   1      }
  42          
  43          void ScanKey(void)
  44          {
  45   1              //testOut = ~testOut;
  46   1              switch(Key_Scan_Steps)
  47   1              {
  48   2                      case 0:
  49   2                              if (keyMotorForward == 0 || keyMotorBackward == 0 ||
  50   2                                  keyTestMotor == 0 || keyInitMotor == 0 || keyUserControl == 0)
  51   2                              {
  52   3                                      Key_Scan_Steps = 1;
  53   3                              }
  54   2                              break;
C51 COMPILER V7.50   KEY                                                                   12/29/2015 17:09:29 PAGE 2   

  55   2                              
  56   2                      case 1:
  57   2                              #ifdef STATE_MACHINE_DELAY
  58   2                                      // 主循环中不延迟，所以这里要延迟20ms进行消除抖动
  59   2                                      delay_ms(20);
  60   2                              #endif
  61   2                              
  62   2                              if (keyMotorForward == 0 || keyMotorBackward == 0 ||
  63   2                                  keyTestMotor == 0 || keyInitMotor == 0  || keyUserControl == 0)
  64   2                              {
  65   3                                      Key_Scan_Steps = 2;
  66   3                              }
  67   2                              else
  68   2                              {
  69   3                                      Key_Scan_Steps = 0;
  70   3                              }
  71   2                              break;
  72   2                              
  73   2                      case 2:
  74   2                              OnKeyPressed();
  75   2                              Key_Scan_Steps = 3;
  76   2                              break;
  77   2                              
  78   2                      case 3:
  79   2                              if (keyMotorBackward == 1 && keyMotorForward == 1 && 
  80   2                                  keyTestMotor == 1 && keyInitMotor == 1 && keyUserControl == 1)
  81   2                              {
  82   3                                      Key_Scan_Steps = 0;
  83   3                              }
  84   2                              break;
  85   2                              
  86   2                      default:
  87   2                               _nop_();
  88   2              }
  89   1      }
  90          
  91          
  92          void TimerScanKey(void)
  93          {
  94   1              switch(Key_Scan_Steps)
  95   1              {
  96   2                      case 0:
  97   2                              if (keyMotorForward == 0 || keyMotorBackward == 0 ||
  98   2                                  keyTestMotor == 0 || keyInitMotor == 0 || keyUserControl == 0)
  99   2                              {
 100   3                                      Key_Scan_Steps = 1;
 101   3                              }
 102   2                              break;
 103   2                              
 104   2                      case 1:
 105   2                              if (keyMotorForward == 0 || keyMotorBackward == 0 ||
 106   2                                  keyTestMotor == 0 || keyInitMotor == 0  || keyUserControl == 0)
 107   2                              {
 108   3                                      OnKeyPressed();
 109   3                                      Key_Scan_Steps = 2;
 110   3                              }
 111   2                              else
 112   2                              {
 113   3                                      Key_Scan_Steps = 0;
 114   3                              }
 115   2                              break;
 116   2                              
C51 COMPILER V7.50   KEY                                                                   12/29/2015 17:09:29 PAGE 3   

 117   2                      case 2:
 118   2                              if (keyMotorBackward == 1 && keyMotorForward == 1 && 
 119   2                                  keyTestMotor == 1 && keyInitMotor == 1 && keyUserControl == 1)
 120   2                              {
 121   3                                      Key_Scan_Steps = 0;
 122   3                              }
 123   2                              break;
 124   2                              
 125   2                      default:
 126   2                               _nop_();
 127   2              }
 128   1      }
 129          
 130          void MainScanKey(void)
 131          {
 132   1              unsigned char flag = 0;
 133   1              if (keyMotorForward == 0 || keyMotorBackward == 0 ||
 134   1                      keyTestMotor == 0 || keyInitMotor == 0 || keyUserControl == 0)
 135   1              {
 136   2                      delay_ms(20);
 137   2                      if (keyMotorForward == 0 || keyMotorBackward == 0 ||
 138   2                              keyTestMotor == 0 || keyInitMotor == 0 || keyUserControl == 0)
 139   2                      {
 140   3                              /*
 141   3                              while (keyMotorBackward == 1 && keyMotorForward == 1 && 
 142   3                                  keyTestMotor == 1 && keyInitMotor == 1 && keyUserControl == 1);
 143   3                              */
 144   3                              flag = 1;
 145   3                      }
 146   2              }
 147   1      
 148   1              if (flag == 1)
 149   1              {
 150   2                      // 执行相关操作
 151   2                      OnKeyPressed();
 152   2                      flag = 0;
 153   2              }
 154   1                      
 155   1      }
 156          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
